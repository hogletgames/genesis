/*
 * BSD 3-Clause License
 *
 * Copyright (c) 2025, Dmitry Shilnenkov
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the name of the copyright holder nor the names of its
 *   contributors may be used to endorse or promote products derived from
 *   this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

using System;
using System.Runtime.CompilerServices;

namespace Ge.Tests {

    public static class ClassInternalCalls {
        [MethodImplAttribute(MethodImplOptions.InternalCall)]
        extern public static bool GetBoolean();

        [MethodImplAttribute(MethodImplOptions.InternalCall)]
        extern public static void SetBoolean(bool value);

        [MethodImplAttribute(MethodImplOptions.InternalCall)]
        extern public static sbyte GetSByte();

        [MethodImplAttribute(MethodImplOptions.InternalCall)]
        extern public static void SetSByte(sbyte value);

        [MethodImplAttribute(MethodImplOptions.InternalCall)]
        extern public static byte GetByte();

        [MethodImplAttribute(MethodImplOptions.InternalCall)]
        extern public static void SetByte(byte value);

        [MethodImplAttribute(MethodImplOptions.InternalCall)]
        extern public static short GetInt16();

        [MethodImplAttribute(MethodImplOptions.InternalCall)]
        extern public static void SetInt16(short value);

        [MethodImplAttribute(MethodImplOptions.InternalCall)]
        extern public static ushort GetUInt16();

        [MethodImplAttribute(MethodImplOptions.InternalCall)]
        extern public static void SetUInt16(ushort value);

        [MethodImplAttribute(MethodImplOptions.InternalCall)]
        extern public static int GetInt32();

        [MethodImplAttribute(MethodImplOptions.InternalCall)]
        extern public static void SetInt32(int value);

        [MethodImplAttribute(MethodImplOptions.InternalCall)]
        extern public static uint GetUInt32();

        [MethodImplAttribute(MethodImplOptions.InternalCall)]
        extern public static void SetUInt32(uint value);

        [MethodImplAttribute(MethodImplOptions.InternalCall)]
        extern public static long GetInt64();

        [MethodImplAttribute(MethodImplOptions.InternalCall)]
        extern public static void SetInt64(long value);

        [MethodImplAttribute(MethodImplOptions.InternalCall)]
        extern public static ulong GetUInt64();

        [MethodImplAttribute(MethodImplOptions.InternalCall)]
        extern public static void SetUInt64(ulong value);

        [MethodImplAttribute(MethodImplOptions.InternalCall)]
        extern public static float GetSingle();

        [MethodImplAttribute(MethodImplOptions.InternalCall)]
        extern public static void SetSingle(float value);

        [MethodImplAttribute(MethodImplOptions.InternalCall)]
        extern public static double GetDouble();

        [MethodImplAttribute(MethodImplOptions.InternalCall)]
        extern public static void SetDouble(double value);

        [MethodImplAttribute(MethodImplOptions.InternalCall)]
        extern public static char GetChar();

        [MethodImplAttribute(MethodImplOptions.InternalCall)]
        extern public static void SetChar(char value);
    }

    public static class StaticClass {
        public static void ExistingMethod() {}

        public static void ZeroArgs() {}

        public static void OneIntArg(int a) {}

        public static void TwoIntArgs(int a, int b) {}

        public static void IntStringBoolArgs(int a, string b, bool c) {}

        public static string StaticMethod() {
            return "ClassMethodsTest::staticMethod";
        }

        public static string TestException(bool throwException, string message) {
            if (throwException) {
                throw new InvalidOperationException(message);
            }

            return message;
        }

        public static bool ReturnBoolean() {
            return true;
        }

        public static bool SetBoolean(bool value) {
            return value;
        }

        public static string ReturnString() {
            return "42";
        }

        public static string SetString(string value) {
            return value;
        }

        public static sbyte ReturnSByte() {
            return -42;
        }

        public static sbyte SetSByte(sbyte value) {
            return value;
        }

        public static byte ReturnByte() {
            return 42;
        }

        public static byte SetByte(byte value) {
            return value;
        }

        public static short ReturnInt16() {
            return -42;
        }

        public static short SetInt16(short value) {
            return value;
        }

        public static ushort ReturnUInt16() {
            return 42;
        }

        public static ushort SetUInt16(ushort value) {
            return value;
        }

        public static int ReturnInt32() {
            return -42;
        }

        public static int SetInt32(int value) {
            return value;
        }

        public static uint ReturnUInt32() {
            return 42;
        }

        public static uint SetUInt32(uint value) {
            return value;
        }

        public static long ReturnInt64() {
            return -42;
        }

        public static long SetInt64(long value) {
            return value;
        }

        public static ulong ReturnUInt64() {
            return 42;
        }

        public static ulong SetUInt64(ulong value) {
            return value;
        }

        public static float ReturnSingle() {
            return 4.2f;
        }

        public static float SetSingle(float value) {
            return value;
        }

        public static double ReturnDouble() {
            return 4.2;
        }

        public static double SetDouble(double value) {
            return value;
        }

        public static char ReturnChar() {
            return '*'; // 42
        }

        public static char SetChar(char value) {
            return value;
        }
    }

    public static class UnmanagedClassMethods {
        public static bool GetBoolean() {
            return InternalCalls.GetBoolean();
        }

        public static void SetBoolean(bool value) {
            InternalCalls.SetBoolean(value);
        }

        public static sbyte GetSByte() {
            return InternalCalls.GetSByte();
        }

        public static void SetSByte(sbyte value) {
            InternalCalls.SetSByte(value);
        }

        public static byte GetByte() {
            return InternalCalls.GetByte();
        }

        public static void SetByte(byte value) {
            InternalCalls.SetByte(value);
        }

        public static short GetInt16() {
            return InternalCalls.GetInt16();
        }

        public static void SetInt16(short value) {
            InternalCalls.SetInt16(value);
        }

        public static ushort GetUInt16() {
            return InternalCalls.GetUInt16();
        }

        public static void SetUInt16(ushort value) {
            InternalCalls.SetUInt16(value);
        }

        public static int GetInt32() {
            return InternalCalls.GetInt32();
        }

        public static void SetInt32(int value) {
            InternalCalls.SetInt32(value);
        }

        public static uint GetUInt32() {
            return InternalCalls.GetUInt32();
        }

        public static void SetUInt32(uint value) {
            InternalCalls.SetUInt32(value);
        }

        public static long GetInt64() {
            return InternalCalls.GetInt64();
        }

        public static void SetInt64(long value) {
            InternalCalls.SetInt64(value);
        }

        public static ulong GetUInt64() {
            return InternalCalls.GetUInt64();
        }

        public static void SetUInt64(ulong value) {
            InternalCalls.SetUInt64(value);
        }

        public static float GetSingle() {
            return InternalCalls.GetSingle();
        }

        public static void SetSingle(float value) {
            InternalCalls.SetSingle(value);
        }

        public static double GetDouble() {
            return InternalCalls.GetDouble();
        }

        public static void SetDouble(double value) {
            InternalCalls.SetDouble(value);
        }

        public static char GetChar() {
            return InternalCalls.GetChar();
        }

        public static void SetChar(char value) {
            InternalCalls.SetChar(value);
        }
    }

    public class UnmanagedObjectMethods {
        public bool GetBoolean() {
            return InternalCalls.GetBoolean();
        }

        public void SetBoolean(bool value) {
            InternalCalls.SetBoolean(value);
        }

        public sbyte GetSByte() {
            return InternalCalls.GetSByte();
        }

        public void SetSByte(sbyte value) {
            InternalCalls.SetSByte(value);
        }

        public byte GetByte() {
            return InternalCalls.GetByte();
        }

        public void SetByte(byte value) {
            InternalCalls.SetByte(value);
        }

        public short GetInt16() {
            return InternalCalls.GetInt16();
        }

        public void SetInt16(short value) {
            InternalCalls.SetInt16(value);
        }

        public ushort GetUInt16() {
            return InternalCalls.GetUInt16();
        }

        public void SetUInt16(ushort value) {
            InternalCalls.SetUInt16(value);
        }

        public int GetInt32() {
            return InternalCalls.GetInt32();
        }

        public void SetInt32(int value) {
            InternalCalls.SetInt32(value);
        }

        public uint GetUInt32() {
            return InternalCalls.GetUInt32();
        }

        public void SetUInt32(uint value) {
            InternalCalls.SetUInt32(value);
        }

        public long GetInt64() {
            return InternalCalls.GetInt64();
        }

        public void SetInt64(long value) {
            InternalCalls.SetInt64(value);
        }

        public ulong GetUInt64() {
            return InternalCalls.GetUInt64();
        }

        public void SetUInt64(ulong value) {
            InternalCalls.SetUInt64(value);
        }

        public float GetSingle() {
            return InternalCalls.GetSingle();
        }

        public void SetSingle(float value) {
            InternalCalls.SetSingle(value);
        }

        public double GetDouble() {
            return InternalCalls.GetDouble();
        }

        public void SetDouble(double value) {
            InternalCalls.SetDouble(value);
        }

        public char GetChar() {
            return InternalCalls.GetChar();
        }

        public void SetChar(char value) {
            InternalCalls.SetChar(value);
        }
    }

}
