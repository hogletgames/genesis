name: CI

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ master ]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  update_docker:
    name: Update Docker image
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          file: Dockerfile
          context: .
          push: true
          tags: hogletgames/genesis-engine:ci
          cache-from: type=registry,ref=hogletgames/genesis-engine-stages:ci
          cache-to: type=registry,ref=hogletgames/genesis-engine-stages:ci,mode=max

  tests:
    name: Tests (${{ matrix.build-type }})
    runs-on: ubuntu-22.04
    container: hogletgames/genesis-engine:ci
    needs: update_docker
    strategy:
      matrix:
        include:
          - build-type: Release
            disable-asserts: ON
          - build-type: Debug
            disable-asserts: OFF
          - build-type: ASAN
            disable-asserts: OFF
          - build-type: UBSAN
            disable-asserts: OFF
          - build-type: TSAN
            disable-asserts: OFF
    env:
      BUILD_TYPE: ${{ matrix.build-type }}
      DISABLE_ASSERTS: ${{ matrix.disable-asserts }}
      BUILD_APPS: ON
      BUILD_EXAMPLES: ON
      BUILD_TESTS: ON
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Download cache
        uses: actions/cache@v4
        with:
          key: ${{ matrix.build-type }}-${{ hashFiles('third-party/CMakeLists.txt') }}
          path: build/_deps
      - name: Build project
        run: make -j$(nproc)
      - name: Run tests
        run: make test

  linters:
    name: Linters
    runs-on: ubuntu-22.04
    container: hogletgames/genesis-engine:ci
    needs: update_docker
    strategy:
      matrix:
        build-type: [Release, Debug]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Download cache
        uses: actions/cache/restore@v4
        with:
          key: ${{ matrix.build-type }}-${{ hashFiles('third-party/CMakeLists.txt') }}
          path: build/_deps
      - name: clang-format
        run: make clang-format
      - name: clang-tidy
        if: github.event_name == 'pull_request' || github.ref == 'refs/heads/master'
        env:
          BUILD_TYPE: ${{ matrix.build-type }}
        run: make clang-tidy
