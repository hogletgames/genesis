name: CI

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ master ]

env:
  BUILD_EXAMPLES: ON

jobs:
  cancel_previous_jobs:
    runs-on: ubuntu-18.04
    steps:
      - name: Cancel outdated jobs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}
  update_docker:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: false
          fetch-depth: 0
      - name: Build docker image
        uses: whoan/docker-build-with-cache-action@v5
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          image_name: hogletgames/genesis-engine
          image_tag: ci
          build_extra_args: "--compress=true"
  tests:
    runs-on: ubuntu-18.04
    container: hogletgames/genesis-engine:ci
    needs: update_docker
    strategy:
      matrix:
        build-type: [Release, Debug, ASAN, USAN, TSAN]
        include:
          - build-type: Release
            disable-asserts: ON
          - build-type: Debug
            disable-asserts: OFF
          - build-type: ASAN
            disable-asserts: OFF
          - build-type: USAN
            disable-asserts: OFF
          - build-type: TSAN
            disable-asserts: OFF
    env:
      BUILD_TYPE: ${{ matrix.build-type }}
      DISABLE_ASSERTS: ${{ matrix.disable-asserts }}
      BUILD_TESTS: ON
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Build project
        run: make -j$(nproc)
      - name: Run tests
        run: make test
  linters:
    runs-on: ubuntu-18.04
    container: hogletgames/genesis-engine:ci
    needs: update_docker
    strategy:
      matrix:
        build-type: [Release, Debug]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 0
      - name: clang-format
        run: make clang-format
      - name: clang-tidy
        env:
          BUILD_TYPE: ${{ matrix.build-type }}
        run: make clang-tidy
